"" Enable filetype-specific indenting and plugins
filetype plugin indent on 
syntax enable
" Don't do the stupid wrapping line junk
set nowrap
" smartcase means ignore case unless i type a capITal letter in my search, mmk?
" From http://www.linuxjournal.com/article/3805
set smartcase
set ignorecase
set incsearch

" use confirm instead of aborting an action
set confirm

" http://items.sjbach.com/319/configuring-vim-right
" current directory is always matching the
" content of the active window
" Not a fan of this, due to non-backward compatibility
" set autochdir
autocmd BufEnter * lcd %:p:h

" remember some stuff after quiting vim:
" marks, registers, searches, buffer list
set viminfo='20,<50,s10,h,%

" use console dialogs instead of popup
" dialogs for simple choices
set guioptions+=c

" TODO: Document what the heck this does.
" Document it on Notesmine
" I ditched longest, because it only completes *up to* the longest common
" characters.  This results in a lot of tabbing/Ctrl-Ning
set completeopt=menu " ,preview,longest
set wildmode=list:longest,full
set dictionary=/usr/share/dict/words
"
" When no beep or flash is wanted
" Note: This is also needed in gvimrc, or Gvim will "beep"
set vb t_vb=

" Don't show the toolbar
:set guioptions-=T

" Tell Vim to quit whining about unsaved buffers 
" when I want to open a new buffer.  Vim just hides
" the unsaved buffer, instead of trying to close it.
set hidden

" ------------ Tab and indent settings ------------  
set smartindent
set autoindent

" Softtabstop is shiftwidth is how many spaces are used for auto-indenting
set softtabstop=4
set shiftwidth=4
" Expand tabs to spaces, mmk?
set expandtab

" ------------- tab labels ---------------
" Set the tab labels to just the filename, and not the abbreviated directories
" that are the default setting
set guitablabel=%N\ %t
" Show entire filename on mouseover of tabs
set guitabtooltip=%N\ %F

" ------------- Swap files/Backup Directory ------------
" Set directory for swap files.
" see :h swap
if has('win32')
    set dir=c:\nate\vimswapfiles
else
    set dir=~/tmp
endif
" Status Line
" The %= means right-align.  The %Y means filetype
" set statusline=%F%m%r%h%w\ (%l\,\ %v)%=%Y\ 
set laststatus=2

" Back up files to $HOME/vimbackups
" If that doesn't exist, try one of the $TEMP directories.
" User will need to create a backup directory if Vim whines about not being able to
" make backups.
" e.g. mkdir -p ~/tmp/vimbackups

set backup
set backupdir=$HOME/tmp/vimbackups

" set the directory of the explorer = to the directory
" of the current buffer
set bsdir=buffer

" Automatically lcd whenever me enter a buffer
" autocmd BufEnter * :lcd %:p:h
" Use CSS for TOhtml command
:let html_use_css = 1
" ------------- Plugin Customizations ---------------
" Tell Rgrep not to use Xargs on Mac OS 'cause it sucks.
" Previously used has("mac"), except this doesn't work in 
" a terminal, and fubars the grep.vim plugin
let s:os = system("uname")
if s:os =~ "Darwin"
    let g:Grep_Xargs_Options='-0'
endif

" For grep.vim, tell it to ignore .svn directories and log files
:let Grep_Skip_Dirs = '.svn log vendor' 
" Ignore case
:let Grep_Default_Options = '-i'

" BufKill customization not to default to a blank buffer
" if this is the last buffer that's killed
let g:BufKillCommandWhenLastBufferKilled = ''


" Map ctrl-t to open in tab, like other plugins
" Initializes g:FuzzyFinderOptions.
let g:FuzzyFinderOptions = { 'Base':{}, 'Buffer':{}, 'File':{}, 'Dir':{}, 'MruFile':{}, 'MruCmd':{}, 'FavFile':{}, 'Tag':{}, 'TaggedFile':{}}
let g:FuzzyFinderOptions.Base.abbrev_map  = {
            \   "^;" : [
            \    getcwd() . '/**/'
            \   ],
            \ } 
let g:FuzzyFinderOptions.Base.key_open_tab = '<S-Enter>'
let g:FuzzyFinderOptions.Base.key_ignore_case = '<C-]>'
let g:fuzzy_roots=[getcwd()]
" Used to tell my version of fuzzy finder what
" the global directory is so that it can remove it from
" search results to trim down menu a bit.
let g:fuzzy_root=getcwd()

let g:FuzzyFinderOptions.File.excluded_path = '\v\~$|\.svn/|\.o$|\.class$|\.exe$|\.bak$|\.swp$|((^|[/\\])\.[/\\]$)'
" buftabs plugin shows the buffers in the statusline.  Define what I want
" statusline to be
" buftabs_in_statusline will display tabs in statusline, rather than the flaky
" command line.
" Status Line.  Set a variable which is used by buftab plugin when
" we're setting any statusline except the bottom one.
" The %= means right-align.  The %Y means filetype
let g:statusline='%F%m%r%h%w\ (%l\,\ %v)%=%Y\ '
let g:buftabs_in_statusline=1
let g:buftabs_only_basename=1
" Most of the time, I use dark backgrounds on terminal
set bg=dark
let mapleader = ","
"" ------------- Source other configfiles -------------
so ~/.vim/nate/menus.vim
so ~/.vim/nate/mappings.vim
so ~/.vim/nate/functions.vim
so ~/.vim/nate/fonts_and_syntax.vim
